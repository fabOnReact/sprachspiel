1 send notification 1 week before launch. Write one mail to each user .. depending on how many you have or find a way to build a chain

6 days

1 Production - Every room has production facility, every player has some fight, armatura, attack score, etc.. and they will use it somehow
2 Production will Build Items

You are building the second loop, but you need to figure out how to get those items available in an array

1) User goes to his room
2) The items he can purchase in his room show up
3) when he select the number, the price increase
4) another button show up for the purchase
4) items#create an item for that room/user
	5) check the requirement for the product object in the requirement + price tables

	  Every product has a building 
	  A query all the products of a building
	  a bottom for the item production for every item in that building, will create a purchase and increase the count or create the line item

	  1. Get the number if items in the room
	  items_number = Room.first.items.group(:product).count

	  2. Loop the room products and show the amount from the previous query
	  products = []
	  Buiding.first.products.each do |product|
		items_number[product]
		products << product.id 
	  end

	  3. Show the products that are not from the room, but from purchases
	  products = Building.first.products
	  Purchase.where(sale_id: nil, room_id: room.id).joins(:items).where.not('items.product_id' => products)





	  buildings = Building.where.not(id: room.building_id)


	  buildings.find_each do |building|
	  	building.products.where(items_number[product])



	  Purchase.where(sale_id: nil, room_id: room.id).joins(:items).where("items.selfmade = ?", true)



	  all the products for that room

	  
	  the quantity of products bought already in that room

	  some products are still missing the products of other rooms bought for that room, but If i convert the result to array, I can loop the array and have all the products name

	  Product.all

	6) create a purchase for that product
		Purchase.create()


3 Tips - with a bottom you can add more tips .. see the other tips in the game..
6 Links to different areas of the game
	link to the player room
	link to the player inventary and help
	link to the full screen chat 
7 automatic creation of room with all texts see below
8 in game notifications for purchases

9 fix the layout on mobile, fix the images on mobile, include links to
10 login with facebook - then big button configure player
11 richiedere il nome e cognome del giocatore alla registrazione
   ask if he wants to be soldier, agricoltore, re, soldato o blacksmith
   dopo di cui il crea la stanza con utentena descizione standard, 
    l utente nella sua stanza potra cliccare edit e modificarla

12 fb graph
13 make a promotion few days before launch with a code they will get free pro accounts if they invite fb friends

change the product name as "Schaufel" for the first product

---------------------before launch-------------------------------
Use action cable to update other areas of the game. like players online
reseources items ...etc..
Internationalization
Globalize


-----------------------before launch-------------------------------
include the send button for the chat
-------------------------------------------------------------------
	remove invoice for now 
	
	user
		has_many :rooms
		has_many :purchases
		has_many :sales

	building 
		has_many: rooms
		has_many: products

	room
		user_id:integer
		has_many :purchases
		has_many :sales
		has_many :items

	product
		building_id:integer
		name:string sickle, four ...
		has_many :item
		has_one :price
		has_one :requirement

	requirement 
		product_id :integer

	price 
		gold
		wood
		....
		product_id :integer

		has_many :invoices

	invoice 
		has_one :purchase
		has_one :sale
		#price_id:integer

	purchases
		room_id:integer
		invoice_id:integer
		price_id:integer
		user_id:integer
		sale_id:integer
		bonus:boolean
		has_many :items

	sale
		room_id:integer
		invoice_id:integer
		price_id:integer
		user_id:integer
		purchase_id:integer
		has_many :items

	item
		room_id:integer
		product_id:integer
		sold:boolean
		used:boolean
		room_id:integer
		purchase_id:integer
		sale_id:integer

-------------------------------------------------------------------

5. Trade products for resources

---------------- Models -------------------------------------------

room 
	building_id:integer
	user_id:integer

	belongs_to :user
	belongs_to :building
	has_one :chatroom

building
	name price_id:integer

	has_many :rooms

price
	gold wood food stone metal

	has_many :buildings

chatroom 
	room_id:integer

	has_many :messages
	has_many :users, through: :messages
	
message
	user_id:integer
	chatroom_id:integer

	belongs_to :user
	belongs_to :chatroom

---------------- SHORTCUTS --------------------------------
heroku run rails console
heroku pg:psql per accedere al database produzione
psql -d SocialNetwork_development per accedere al db
\dt per mostrare tutte le tabelle
rake assets:precompile
rm -rf public/assets
RAILS_ENV=production bundle exec rake assets:precompile
lsof -wni tcp:3000
kill -9 59780
foreman configuration procfile web: bundle exec rails s
git rm -r vendor/plugins #delete files from git then commit and push
heroku run rake db:migrate
Rails.application.config.assets.paths